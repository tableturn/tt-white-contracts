/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "FastAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FastAccess__factory>;
    getContractFactory(
      name: "FastHistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FastHistory__factory>;
    getContractFactory(
      name: "FastRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FastRegistry__factory>;
    getContractFactory(
      name: "FastToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FastToken__factory>;
    getContractFactory(
      name: "IERC1404",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1404__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IFastAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFastAccess__factory>;
    getContractFactory(
      name: "IFastHistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFastHistory__factory>;
    getContractFactory(
      name: "IFastRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFastRegistry__factory>;
    getContractFactory(
      name: "IFastToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFastToken__factory>;
    getContractFactory(
      name: "ISpc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISpc__factory>;
    getContractFactory(
      name: "PaginationLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaginationLib__factory>;
    getContractFactory(
      name: "Spc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Spc__factory>;

    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "FastAccess",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FastAccess>;
    getContractAt(
      name: "FastHistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FastHistory>;
    getContractAt(
      name: "FastRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FastRegistry>;
    getContractAt(
      name: "FastToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FastToken>;
    getContractAt(
      name: "IERC1404",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1404>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IFastAccess",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFastAccess>;
    getContractAt(
      name: "IFastHistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFastHistory>;
    getContractAt(
      name: "IFastRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFastRegistry>;
    getContractAt(
      name: "IFastToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFastToken>;
    getContractAt(
      name: "ISpc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISpc>;
    getContractAt(
      name: "PaginationLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PaginationLib>;
    getContractAt(
      name: "Spc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Spc>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
