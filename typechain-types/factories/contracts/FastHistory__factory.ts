/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FastHistory,
  FastHistoryInterface,
} from "../../contracts/FastHistory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "ref",
        type: "string",
      },
    ],
    name: "MintingProofAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref",
        type: "string",
      },
    ],
    name: "TransferProofAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
    ],
    name: "addMintingProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
    ],
    name: "addTransferProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FastRegistry",
        name: "_reg",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingProofCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perPage",
        type: "uint256",
      },
    ],
    name: "paginateMintingProofs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ref",
            type: "string",
          },
        ],
        internalType: "struct IFastHistory.MintingProof[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perPage",
        type: "uint256",
      },
    ],
    name: "paginateTransferProofs",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ref",
            type: "string",
          },
        ],
        internalType: "struct IFastHistory.TransferProof[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "involvee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perPage",
        type: "uint256",
      },
    ],
    name: "paginateTransferProofsByInvolvee",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reg",
    outputs: [
      {
        internalType: "contract FastRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transferProofCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferProofInvolvements",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612370806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063c4d66de811610066578063c4d66de814610149578063d03a70d714610165578063ee67108314610196578063f30014d9146101b2578063f4b54f33146101e35761009e565b80635537a67a146100a3578063606db954146100c1578063738fdd1a146100df578063801efae2146100fd578063843d00e61461012d575b600080fd5b6100ab610214565b6040516100b89190611d3b565b60405180910390f35b6100c9610221565b6040516100d69190611d3b565b60405180910390f35b6100e761022e565b6040516100f49190611cc5565b60405180910390f35b61011760048036038101906101129190611204565b610254565b6040516101249190611d3b565b60405180910390f35b610147600480360381019061014291906113dd565b610285565b005b610163600480360381019061015e919061138b565b610455565b005b61017f600480360381019061017a9190611431565b610523565b60405161018d929190611b7b565b60405180910390f35b6101b060048036038101906101ab9190611175565b6105c3565b005b6101cc60048036038101906101c79190611240565b6109d1565b6040516101da929190611c57565b60405180910390f35b6101fd60048036038101906101f89190611431565b610aaf565b60405161020b929190611be9565b60405180910390f35b6000600280549050905090565b6000600180549050905090565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052816000526040600020818154811061027057600080fd5b90600052602060002001600091509150505481565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ee57600080fd5b505afa158015610302573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032691906113b4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90611cfb565b60405180910390fd5b6001604051806060016040528085815260200143815260200184815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101556040820151816002019080519060200190610409929190610c62565b5050508160405161041a9190611b64565b604051809103902043847fe3453b18d6df5013a83ce9490fd898969ac803a6695349e72775cb3a3b37e02560405160405180910390a4505050565b60006104616001610b4f565b90508015610485576001600060016101000a81548160ff0219169083151502179055505b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561051f5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516105169190611ce0565b60405180910390a15b5050565b6060600073__$487a23fac22966c883114cdd4da3fa5461$__63bd33e7e6600186866040518463ffffffff1660e01b815260040161056393929190611bab565b60006040518083038186803b15801561057b57600080fd5b505af415801561058f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105b8919061128f565b915091509250929050565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062c57600080fd5b505afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066491906113b4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890611cfb565b60405180910390fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002805490509080600181540180825580915050600190039060005260206000200160009091909190915055600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600280549050908060018154018082558091505060019003906000526020600020016000909190919091505560026040518060c001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200143815260200184815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005019080519060200190610946929190610c62565b5050508373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f34fec22f1aa0b2ff14ec9e2bdb3160e35d4f632dcf724692b6007fab6fb68bf18643876040516109c193929190611d56565b60405180910390a4505050505050565b6060600073__$487a23fac22966c883114cdd4da3fa5461$__6320027aba600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086866040518463ffffffff1660e01b8152600401610a4e93929190611c87565b60006040518083038186803b158015610a6657600080fd5b505af4158015610a7a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610aa39190611337565b91509150935093915050565b6060600073__$487a23fac22966c883114cdd4da3fa5461$__633152ca34600286866040518463ffffffff1660e01b8152600401610aef93929190611c19565b60006040518083038186803b158015610b0757600080fd5b505af4158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b4491906112e3565b915091509250929050565b60008060019054906101000a900460ff1615610bc65760018260ff16148015610b7e5750610b7c30610c3f565b155b610bbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb490611d1b565b60405180910390fd5b60009050610c3a565b8160ff1660008054906101000a900460ff1660ff1610610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1290611d1b565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b828054610c6e90612140565b90600052602060002090601f016020900481019282610c905760008555610cd7565b82601f10610ca957805160ff1916838001178555610cd7565b82800160010185558215610cd7579182015b82811115610cd6578251825591602001919060010190610cbb565b5b509050610ce49190610ce8565b5090565b5b80821115610d01576000816000905550600101610ce9565b5090565b6000610d18610d1384611db9565b611d94565b90508083825260208201905082856020860282011115610d3757600080fd5b60005b85811015610d8157815167ffffffffffffffff811115610d5957600080fd5b808601610d66898261101f565b85526020850194506020840193505050600181019050610d3a565b5050509392505050565b6000610d9e610d9984611de5565b611d94565b90508083825260208201905082856020860282011115610dbd57600080fd5b60005b85811015610e0757815167ffffffffffffffff811115610ddf57600080fd5b808601610dec8982611097565b85526020850194506020840193505050600181019050610dc0565b5050509392505050565b6000610e24610e1f84611e11565b611d94565b90508083825260208201905082856020860282011115610e4357600080fd5b60005b85811015610e735781610e598882611160565b845260208401935060208301925050600181019050610e46565b5050509392505050565b6000610e90610e8b84611e3d565b611d94565b905082815260208101848484011115610ea857600080fd5b610eb38482856120fe565b509392505050565b6000610ece610ec984611e3d565b611d94565b905082815260208101848484011115610ee657600080fd5b610ef184828561210d565b509392505050565b600081359050610f08816122de565b92915050565b600081519050610f1d816122de565b92915050565b600082601f830112610f3457600080fd5b8151610f44848260208601610d05565b91505092915050565b600082601f830112610f5e57600080fd5b8151610f6e848260208601610d8b565b91505092915050565b600082601f830112610f8857600080fd5b8151610f98848260208601610e11565b91505092915050565b600081359050610fb0816122f5565b92915050565b600081519050610fc58161230c565b92915050565b600082601f830112610fdc57600080fd5b8135610fec848260208601610e7d565b91505092915050565b600082601f83011261100657600080fd5b8151611016848260208601610ebb565b91505092915050565b60006060828403121561103157600080fd5b61103b6060611d94565b9050600061104b84828501611160565b600083015250602061105f84828501611160565b602083015250604082015167ffffffffffffffff81111561107f57600080fd5b61108b84828501610ff5565b60408301525092915050565b600060c082840312156110a957600080fd5b6110b360c0611d94565b905060006110c384828501610f0e565b60008301525060206110d784828501610f0e565b60208301525060406110eb84828501610f0e565b60408301525060606110ff84828501611160565b606083015250608061111384828501611160565b60808301525060a082015167ffffffffffffffff81111561113357600080fd5b61113f84828501610ff5565b60a08301525092915050565b60008135905061115a81612323565b92915050565b60008151905061116f81612323565b92915050565b600080600080600060a0868803121561118d57600080fd5b600061119b88828901610ef9565b95505060206111ac88828901610ef9565b94505060406111bd88828901610ef9565b93505060606111ce8882890161114b565b925050608086013567ffffffffffffffff8111156111eb57600080fd5b6111f788828901610fcb565b9150509295509295909350565b6000806040838503121561121757600080fd5b600061122585828601610ef9565b92505060206112368582860161114b565b9150509250929050565b60008060006060848603121561125557600080fd5b600061126386828701610ef9565b93505060206112748682870161114b565b92505060406112858682870161114b565b9150509250925092565b600080604083850312156112a257600080fd5b600083015167ffffffffffffffff8111156112bc57600080fd5b6112c885828601610f23565b92505060206112d985828601611160565b9150509250929050565b600080604083850312156112f657600080fd5b600083015167ffffffffffffffff81111561131057600080fd5b61131c85828601610f4d565b925050602061132d85828601611160565b9150509250929050565b6000806040838503121561134a57600080fd5b600083015167ffffffffffffffff81111561136457600080fd5b61137085828601610f77565b925050602061138185828601611160565b9150509250929050565b60006020828403121561139d57600080fd5b60006113ab84828501610fa1565b91505092915050565b6000602082840312156113c657600080fd5b60006113d484828501610fb6565b91505092915050565b600080604083850312156113f057600080fd5b60006113fe8582860161114b565b925050602083013567ffffffffffffffff81111561141b57600080fd5b61142785828601610fcb565b9150509250929050565b6000806040838503121561144457600080fd5b60006114528582860161114b565b92505060206114638582860161114b565b9150509250929050565b60006114798383611927565b905092915050565b600061148d8383611977565b905092915050565b60006114a183836119de565b905092915050565b60006114b58383611a67565b905092915050565b60006114c98383611b28565b60208301905092915050565b60006114e18383611b55565b60208301905092915050565b6114f68161205b565b82525050565b6115058161205b565b82525050565b600061151682611ef2565b6115208185611f8d565b93508360208202850161153285611e6e565b8060005b8581101561156e578484038952815161154f858261146d565b945061155a83611f3f565b925060208a01995050600181019050611536565b50829750879550505050505092915050565b600061158b82611efd565b6115958185611f9e565b9350836020820285016115a785611e7e565b8060005b858110156115e2578484038952816115c38582611481565b94506115ce83611f4c565b925060208a019950506001810190506115ab565b50829750879550505050505092915050565b60006115ff82611f08565b6116098185611faf565b93508360208202850161161b85611e93565b8060005b8581101561165757848403895281516116388582611495565b945061164383611f59565b925060208a0199505060018101905061161f565b50829750879550505050505092915050565b600061167482611f13565b61167e8185611fc0565b93508360208202850161169085611ea3565b8060005b858110156116cb578484038952816116ac85826114a9565b94506116b783611f66565b925060208a01995050600181019050611694565b50829750879550505050505092915050565b60006116e882611f1e565b6116f28185611fd1565b93506116fd83611eb8565b8060005b8381101561172e57815161171588826114bd565b975061172083611f73565b925050600181019050611701565b5085935050505092915050565b600061174682611f29565b6117508185611fe2565b935061175b83611ec8565b8060005b838110156117935761177082612235565b61177a88826114d5565b975061178583611f80565b92505060018101905061175f565b5085935050505092915050565b6117a9816120c8565b82525050565b6117b8816120ec565b82525050565b60006117c982611f34565b6117d38185611ff3565b93506117e381856020860161210d565b6117ec81612248565b840191505092915050565b600061180282611f34565b61180c8185612004565b935061181c81856020860161210d565b61182581612248565b840191505092915050565b600061183b82611f34565b6118458185612026565b935061185581856020860161210d565b80840191505092915050565b6000815461186e81612140565b6118788186612015565b9450600182166000811461189357600181146118a5576118d8565b60ff19831686526020860193506118d8565b6118ae85611edd565b60005b838110156118d0578154818901526001820191506020810190506118b1565b808801955050505b50505092915050565b60006118ee601983612004565b91506118f982612266565b602082019050919050565b6000611911602e83612004565b915061191c8261228f565b604082019050919050565b600060608301600083015161193f6000860182611b28565b5060208301516119526020860182611b28565b506040830151848203604086015261196a82826117be565b9150508091505092915050565b600060608301600080840154905061198e8161218c565b61199b6000870182611b55565b50600184015490506119ac8161218c565b6119b96020870182611b55565b506002840185830360408701526119d08382611861565b925050819250505092915050565b600060c0830160008301516119f660008601826114ed565b506020830151611a0960208601826114ed565b506040830151611a1c60408601826114ed565b506060830151611a2f6060860182611b28565b506080830151611a426080860182611b28565b5060a083015184820360a0860152611a5a82826117be565b9150508091505092915050565b600060c083016000808401549050611a7e81612172565b611a8b60008701826114fc565b5060018401549050611a9c81612172565b611aa960208701826114fc565b5060028401549050611aba81612172565b611ac760408701826114fc565b5060038401549050611ad88161218c565b611ae56060870182611b55565b5060048401549050611af68161218c565b611b036080870182611b55565b506005840185830360a0870152611b1a8382611861565b925050819250505092915050565b611b31816120b1565b82525050565b611b40816120b1565b82525050565b611b4f816120b1565b82525050565b611b5e816120b1565b82525050565b6000611b708284611830565b915081905092915050565b60006040820190508181036000830152611b95818561150b565b9050611ba46020830184611b37565b9392505050565b60006060820190508181036000830152611bc58186611580565b9050611bd46020830185611b46565b611be16040830184611b46565b949350505050565b60006040820190508181036000830152611c0381856115f4565b9050611c126020830184611b37565b9392505050565b60006060820190508181036000830152611c338186611669565b9050611c426020830185611b46565b611c4f6040830184611b46565b949350505050565b60006040820190508181036000830152611c7181856116dd565b9050611c806020830184611b37565b9392505050565b60006060820190508181036000830152611ca1818661173b565b9050611cb06020830185611b46565b611cbd6040830184611b46565b949350505050565b6000602082019050611cda60008301846117a0565b92915050565b6000602082019050611cf560008301846117af565b92915050565b60006020820190508181036000830152611d14816118e1565b9050919050565b60006020820190508181036000830152611d3481611904565b9050919050565b6000602082019050611d506000830184611b37565b92915050565b6000606082019050611d6b6000830186611b37565b611d786020830185611b37565b8181036040830152611d8a81846117f7565b9050949350505050565b6000611d9e611daf565b9050611daa82826121a6565b919050565b6000604051905090565b600067ffffffffffffffff821115611dd457611dd3612206565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e0057611dff612206565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e2c57611e2b612206565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e5857611e57612206565b5b611e6182612248565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081549050919050565b600081519050919050565b600081549050919050565b600081519050919050565b600081549050919050565b600081519050919050565b6000602082019050919050565b6000600382019050919050565b6000602082019050919050565b6000600682019050919050565b6000602082019050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061206682612091565b9050919050565b60006120788261205b565b9050919050565b600061208a8261205b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006120d3826120da565b9050919050565b60006120e582612091565b9050919050565b60006120f7826120bb565b9050919050565b82818337600083830152505050565b60005b8381101561212b578082015181840152602081019050612110565b8381111561213a576000848401525b50505050565b6000600282049050600182168061215857607f821691505b6020821081141561216c5761216b6121d7565b5b50919050565b600061218561218083612259565b612031565b9050919050565b600061219f61219a83612259565b612051565b9050919050565b6121af82612248565b810181811067ffffffffffffffff821117156121ce576121cd612206565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000612241825461218c565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b7f43616e6e6f742062652063616c6c6564206469726563746c7900000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6122e78161205b565b81146122f257600080fd5b50565b6122fe8161206d565b811461230957600080fd5b50565b6123158161207f565b811461232057600080fd5b50565b61232c816120b1565b811461233757600080fd5b5056fea26469706673582212207597cffc2a2546f21921040896297631bc40bfead94f209bdaef8c017bdd877964736f6c63430008040033";

type FastHistoryConstructorParams =
  | [linkLibraryAddresses: FastHistoryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FastHistoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FastHistory__factory extends ContractFactory {
  constructor(...args: FastHistoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FastHistory__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FastHistoryLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$487a23fac22966c883114cdd4da3fa5461\\$__", "g"),
      linkLibraryAddresses["contracts/lib/PaginationLib.sol:PaginationLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastHistory> {
    return super.deploy(overrides || {}) as Promise<FastHistory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FastHistory {
    return super.attach(address) as FastHistory;
  }
  override connect(signer: Signer): FastHistory__factory {
    return super.connect(signer) as FastHistory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastHistoryInterface {
    return new utils.Interface(_abi) as FastHistoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastHistory {
    return new Contract(address, _abi, signerOrProvider) as FastHistory;
  }
}

export interface FastHistoryLibraryAddresses {
  ["contracts/lib/PaginationLib.sol:PaginationLib"]: string;
}
