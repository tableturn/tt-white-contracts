/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FastHistory,
  FastHistoryInterface,
} from "../../contracts/FastHistory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "ref",
        type: "string",
      },
    ],
    name: "MintingProofAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref",
        type: "string",
      },
    ],
    name: "TransferProofAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
    ],
    name: "addMintingProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
    ],
    name: "addTransferProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FastRegistry",
        name: "_reg",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingProofCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perPage",
        type: "uint256",
      },
    ],
    name: "paginateMintingProofs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ref",
            type: "string",
          },
        ],
        internalType: "struct IFastHistory.MintingProof[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perPage",
        type: "uint256",
      },
    ],
    name: "paginateTransferProofs",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ref",
            type: "string",
          },
        ],
        internalType: "struct IFastHistory.TransferProof[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "involvee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perPage",
        type: "uint256",
      },
    ],
    name: "paginateTransferProofsByInvolvee",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reg",
    outputs: [
      {
        internalType: "contract FastRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transferProofCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612a5b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c4d66de811610066578063c4d66de81461010e578063d03a70d71461012a578063ee6710831461015b578063f30014d914610177578063f4b54f33146101a857610093565b80635537a67a14610098578063606db954146100b6578063738fdd1a146100d4578063843d00e6146100f2575b600080fd5b6100a06101d9565b6040516100ad9190612426565b60405180910390f35b6100be61026a565b6040516100cb9190612426565b60405180910390f35b6100dc6102fb565b6040516100e991906123b0565b60405180910390f35b61010c60048036038101906101079190611ac8565b610321565b005b61012860048036038101906101239190611a76565b6106d5565b005b610144600480360381019061013f9190611b1c565b610827565b604051610152929190612266565b60405180910390f35b6101756004803603810190610170919061189c565b61094b565b005b610191600480360381019061018c919061192b565b610fed565b60405161019f929190612342565b60405180910390f35b6101c260048036038101906101bd9190611b1c565b61114f565b6040516101d09291906122d4565b60405180910390f35b60006102077f898d47e697c1f688a78d0ba1da08bc68ab3f36987d49996b7e9c0e39fe8142ca60001b611273565b6102337fef0471591d2a0e05ea2de8f3801404d7b33804fbf4f3f6a217bc1f1701b6516460001b611273565b61025f7fe5194df00b1b620509ff844adf1e54236dac9f76fa3c913ff6847bc746b4c19260001b611273565b600280549050905090565b60006102987fb03d9748237ff940ee7866f256e954b54854ea63dbeebdd98c3137be6d0dd4c760001b611273565b6102c47feb9244c4f36ee3123db9421e59206dbabe6c3df92c2bc2817aae4dffd24f947260001b611273565b6102f07fb91e54c7241304adac5cba33ed7039d506ab91e4228a50956598b8891d6ca55360001b611273565b600180549050905090565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3361034e7ff6226d3351f720105ec941f5e23717a13a45f187d94541a75ab01c1678e88b6660001b611273565b61037a7fc7b1c710b1df931c2b59c3d538cc3bf83500044fa75c1a01a077260d2e06b4b660001b611273565b6103a67f99e9af49317f1916e7be66a204df4dd5c2c3b1a1873d8a3f07791656e0ffaae060001b611273565b6103d27ff876a4cadcbd000f2caabc17d71fc56a8ca6b9354f8a8ec4056b8b0164f1569960001b611273565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561043a57600080fd5b505afa15801561044e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104729190611a9f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d6906123e6565b60405180910390fd5b61050b7f7930cc2afbca4380a45950816ad7f8d43470a7104bf176af6bd1b5b9a633d40260001b611273565b6105377f2e232ae83e752c0bade1da1f8caa1960383bcfd387f6b15b18a73bc3d8c845e860001b611273565b6105637fcf9c8e3ed2855579b2e0d20acfea81049283762aa706cfba83f689aaeb1140eb60001b611273565b61058f7f2ea040a9aae2a97a12594cad97f63e86a13679e1a4ea8467d35844461076b9b860001b611273565b6105bb7fab4073cb22bb8308e9fa0037ff69fd0fe12eae12de2cd82da1fa0ab372e44c3660001b611273565b6001604051806060016040528085815260200143815260200184815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101556040820151816002019080519060200190610631929190611389565b5050506106607f06b384f3047cbf0db5a042d0f51b3e0bee556f86adb71f598774663c7d1df80960001b611273565b61068c7fec7497d3692a23a9ec6f77e6279f4cbf878aeaf099e302ecdec74eefea2249b260001b611273565b8160405161069a919061224f565b604051809103902043847fe3453b18d6df5013a83ce9490fd898969ac803a6695349e72775cb3a3b37e02560405160405180910390a4505050565b60006106e16001611276565b90508015610705576001600060016101000a81548160ff0219169083151502179055505b6107317f461efa7b118af833398efda531bbe707ea6ebbb09d3c053622ffcfc59554a5dd60001b611273565b61075d7f35642546cf0f4f30666be8e327c752a02eb7f2d14934d4e95e693709e32c0cc760001b611273565b6107897f619b4756bbfb1c898c5eaa44f30e92fa4c432232b725cf9112df9a9694714b8a60001b611273565b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156108235760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161081a91906123cb565b60405180910390a15b5050565b606060006108577fd24b25e921ae98721e400892410cb412cbcf24e6baa8a61e7a8f0e1677c2beac60001b611273565b6108837f3daedaf2f71575b9e06488d84a53211be1aa6565e1985f5045ec8f46084ee20560001b611273565b6108af7f1737f1bbe95ac4b5c58e1ad69b1aca2eb46b1077074429e31415aae1467e09ab60001b611273565b73__$487a23fac22966c883114cdd4da3fa5461$__63bd33e7e6600186866040518463ffffffff1660e01b81526004016108eb93929190612296565b60006040518083038186803b15801561090357600080fd5b505af4158015610917573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610940919061197a565b915091509250929050565b336109787ff6226d3351f720105ec941f5e23717a13a45f187d94541a75ab01c1678e88b6660001b611273565b6109a47fc7b1c710b1df931c2b59c3d538cc3bf83500044fa75c1a01a077260d2e06b4b660001b611273565b6109d07f99e9af49317f1916e7be66a204df4dd5c2c3b1a1873d8a3f07791656e0ffaae060001b611273565b6109fc7ff876a4cadcbd000f2caabc17d71fc56a8ca6b9354f8a8ec4056b8b0164f1569960001b611273565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6457600080fd5b505afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c9190611a9f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b00906123e6565b60405180910390fd5b610b357f7930cc2afbca4380a45950816ad7f8d43470a7104bf176af6bd1b5b9a633d40260001b611273565b610b617f2e232ae83e752c0bade1da1f8caa1960383bcfd387f6b15b18a73bc3d8c845e860001b611273565b610b8d7feb91c960266f1fc59038a2abccf8cefd227bef81fab08e1f75b32b2f903f602560001b611273565b610bb97f2e40971a075443e404eb044d473605e02b56f4595e8feebde9802308b929453560001b611273565b610be57f4266684a07f5bc5bdda1a53da01464ecbaf05f7d6890622dfdec84e72f4a7a0e60001b611273565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002805490509080600181540180825580915050600190039060005260206000200160009091909190915055610c7c7faa3739eb0036501252cd801695978a31082d8a236e1c72d24ba5c1cd3968a63c60001b611273565b610ca87f289f9a0b7f43ebe8580eb68a696a23b0cfc3189d503c8938ab99a1b28afba2a560001b611273565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002805490509080600181540180825580915050600190039060005260206000200160009091909190915055610d3f7ff858e06acbf6bd09359601e5c29c8dbaba1a2abc6ee76fee343a712f31a2ed1a60001b611273565b610d6b7fd60e4cd188b11c71964a5d057b3cb4c2479c740f6f4ad69377e029ae7b84c86d60001b611273565b60026040518060c001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200143815260200184815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005019080519060200190610f0a929190611389565b505050610f397f5f97f852dd1320a766159c6970b4333db791e107e697e574eb179fc608f1190060001b611273565b610f657f26d71a6bbec950d99bcb45964360ffc833c776b01bdd770b7c293382d728049860001b611273565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f34fec22f1aa0b2ff14ec9e2bdb3160e35d4f632dcf724692b6007fab6fb68bf1864387604051610fdd93929190612441565b60405180910390a4505050505050565b6060600061101d7f8c132fc1d305ace7b71eb7684cbebceda6011471d27181c0c1b3da49177d57ee60001b611273565b6110497fdd858a5810bec90efdea5f374ef67790d40334fbd617969892545d603bd15b5c60001b611273565b6110757fb3a369b7297a78dac8bb5897b011000eda66c0fa9a16d83671c6758fab33ee7f60001b611273565b73__$487a23fac22966c883114cdd4da3fa5461$__6320027aba600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086866040518463ffffffff1660e01b81526004016110ee93929190612372565b60006040518083038186803b15801561110657600080fd5b505af415801561111a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111439190611a22565b91509150935093915050565b6060600061117f7fa86249d6c0ba524f8eeff4458ac3e5bd94ec4f2db0a3ac97fd34e0fbc4e5802d60001b611273565b6111ab7fec9e5c6c48dd62984acfb813c08b0016e0d2d2e5ec0d7109f2a8dfc971455ad560001b611273565b6111d77f582462b671215cc9214f418b839c2ef8545f7f528232b2ac83651658e6603cfa60001b611273565b73__$487a23fac22966c883114cdd4da3fa5461$__633152ca34600286866040518463ffffffff1660e01b815260040161121393929190612304565b60006040518083038186803b15801561122b57600080fd5b505af415801561123f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061126891906119ce565b915091509250929050565b50565b60008060019054906101000a900460ff16156112ed5760018260ff161480156112a557506112a330611366565b155b6112e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112db90612406565b60405180910390fd5b60009050611361565b8160ff1660008054906101000a900460ff1660ff1610611342576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133990612406565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b8280546113959061282b565b90600052602060002090601f0160209004810192826113b757600085556113fe565b82601f106113d057805160ff19168380011785556113fe565b828001600101855582156113fe579182015b828111156113fd5782518255916020019190600101906113e2565b5b50905061140b919061140f565b5090565b5b80821115611428576000816000905550600101611410565b5090565b600061143f61143a846124a4565b61247f565b9050808382526020820190508285602086028201111561145e57600080fd5b60005b858110156114a857815167ffffffffffffffff81111561148057600080fd5b80860161148d8982611746565b85526020850194506020840193505050600181019050611461565b5050509392505050565b60006114c56114c0846124d0565b61247f565b905080838252602082019050828560208602820111156114e457600080fd5b60005b8581101561152e57815167ffffffffffffffff81111561150657600080fd5b80860161151389826117be565b855260208501945060208401935050506001810190506114e7565b5050509392505050565b600061154b611546846124fc565b61247f565b9050808382526020820190508285602086028201111561156a57600080fd5b60005b8581101561159a57816115808882611887565b84526020840193506020830192505060018101905061156d565b5050509392505050565b60006115b76115b284612528565b61247f565b9050828152602081018484840111156115cf57600080fd5b6115da8482856127e9565b509392505050565b60006115f56115f084612528565b61247f565b90508281526020810184848401111561160d57600080fd5b6116188482856127f8565b509392505050565b60008135905061162f816129c9565b92915050565b600081519050611644816129c9565b92915050565b600082601f83011261165b57600080fd5b815161166b84826020860161142c565b91505092915050565b600082601f83011261168557600080fd5b81516116958482602086016114b2565b91505092915050565b600082601f8301126116af57600080fd5b81516116bf848260208601611538565b91505092915050565b6000813590506116d7816129e0565b92915050565b6000815190506116ec816129f7565b92915050565b600082601f83011261170357600080fd5b81356117138482602086016115a4565b91505092915050565b600082601f83011261172d57600080fd5b815161173d8482602086016115e2565b91505092915050565b60006060828403121561175857600080fd5b611762606061247f565b9050600061177284828501611887565b600083015250602061178684828501611887565b602083015250604082015167ffffffffffffffff8111156117a657600080fd5b6117b28482850161171c565b60408301525092915050565b600060c082840312156117d057600080fd5b6117da60c061247f565b905060006117ea84828501611635565b60008301525060206117fe84828501611635565b602083015250604061181284828501611635565b604083015250606061182684828501611887565b606083015250608061183a84828501611887565b60808301525060a082015167ffffffffffffffff81111561185a57600080fd5b6118668482850161171c565b60a08301525092915050565b60008135905061188181612a0e565b92915050565b60008151905061189681612a0e565b92915050565b600080600080600060a086880312156118b457600080fd5b60006118c288828901611620565b95505060206118d388828901611620565b94505060406118e488828901611620565b93505060606118f588828901611872565b925050608086013567ffffffffffffffff81111561191257600080fd5b61191e888289016116f2565b9150509295509295909350565b60008060006060848603121561194057600080fd5b600061194e86828701611620565b935050602061195f86828701611872565b925050604061197086828701611872565b9150509250925092565b6000806040838503121561198d57600080fd5b600083015167ffffffffffffffff8111156119a757600080fd5b6119b38582860161164a565b92505060206119c485828601611887565b9150509250929050565b600080604083850312156119e157600080fd5b600083015167ffffffffffffffff8111156119fb57600080fd5b611a0785828601611674565b9250506020611a1885828601611887565b9150509250929050565b60008060408385031215611a3557600080fd5b600083015167ffffffffffffffff811115611a4f57600080fd5b611a5b8582860161169e565b9250506020611a6c85828601611887565b9150509250929050565b600060208284031215611a8857600080fd5b6000611a96848285016116c8565b91505092915050565b600060208284031215611ab157600080fd5b6000611abf848285016116dd565b91505092915050565b60008060408385031215611adb57600080fd5b6000611ae985828601611872565b925050602083013567ffffffffffffffff811115611b0657600080fd5b611b12858286016116f2565b9150509250929050565b60008060408385031215611b2f57600080fd5b6000611b3d85828601611872565b9250506020611b4e85828601611872565b9150509250929050565b6000611b648383612012565b905092915050565b6000611b788383612062565b905092915050565b6000611b8c83836120c9565b905092915050565b6000611ba08383612152565b905092915050565b6000611bb48383612213565b60208301905092915050565b6000611bcc8383612240565b60208301905092915050565b611be181612746565b82525050565b611bf081612746565b82525050565b6000611c01826125dd565b611c0b8185612678565b935083602082028501611c1d85612559565b8060005b85811015611c595784840389528151611c3a8582611b58565b9450611c458361262a565b925060208a01995050600181019050611c21565b50829750879550505050505092915050565b6000611c76826125e8565b611c808185612689565b935083602082028501611c9285612569565b8060005b85811015611ccd57848403895281611cae8582611b6c565b9450611cb983612637565b925060208a01995050600181019050611c96565b50829750879550505050505092915050565b6000611cea826125f3565b611cf4818561269a565b935083602082028501611d068561257e565b8060005b85811015611d425784840389528151611d238582611b80565b9450611d2e83612644565b925060208a01995050600181019050611d0a565b50829750879550505050505092915050565b6000611d5f826125fe565b611d6981856126ab565b935083602082028501611d7b8561258e565b8060005b85811015611db657848403895281611d978582611b94565b9450611da283612651565b925060208a01995050600181019050611d7f565b50829750879550505050505092915050565b6000611dd382612609565b611ddd81856126bc565b9350611de8836125a3565b8060005b83811015611e19578151611e008882611ba8565b9750611e0b8361265e565b925050600181019050611dec565b5085935050505092915050565b6000611e3182612614565b611e3b81856126cd565b9350611e46836125b3565b8060005b83811015611e7e57611e5b82612920565b611e658882611bc0565b9750611e708361266b565b925050600181019050611e4a565b5085935050505092915050565b611e94816127b3565b82525050565b611ea3816127d7565b82525050565b6000611eb48261261f565b611ebe81856126de565b9350611ece8185602086016127f8565b611ed781612933565b840191505092915050565b6000611eed8261261f565b611ef781856126ef565b9350611f078185602086016127f8565b611f1081612933565b840191505092915050565b6000611f268261261f565b611f308185612711565b9350611f408185602086016127f8565b80840191505092915050565b60008154611f598161282b565b611f638186612700565b94506001821660008114611f7e5760018114611f9057611fc3565b60ff1983168652602086019350611fc3565b611f99856125c8565b60005b83811015611fbb57815481890152600182019150602081019050611f9c565b808801955050505b50505092915050565b6000611fd96019836126ef565b9150611fe482612951565b602082019050919050565b6000611ffc602e836126ef565b91506120078261297a565b604082019050919050565b600060608301600083015161202a6000860182612213565b50602083015161203d6020860182612213565b50604083015184820360408601526120558282611ea9565b9150508091505092915050565b600060608301600080840154905061207981612877565b6120866000870182612240565b506001840154905061209781612877565b6120a46020870182612240565b506002840185830360408701526120bb8382611f4c565b925050819250505092915050565b600060c0830160008301516120e16000860182611bd8565b5060208301516120f46020860182611bd8565b5060408301516121076040860182611bd8565b50606083015161211a6060860182612213565b50608083015161212d6080860182612213565b5060a083015184820360a08601526121458282611ea9565b9150508091505092915050565b600060c0830160008084015490506121698161285d565b6121766000870182611be7565b50600184015490506121878161285d565b6121946020870182611be7565b50600284015490506121a58161285d565b6121b26040870182611be7565b50600384015490506121c381612877565b6121d06060870182612240565b50600484015490506121e181612877565b6121ee6080870182612240565b506005840185830360a08701526122058382611f4c565b925050819250505092915050565b61221c8161279c565b82525050565b61222b8161279c565b82525050565b61223a8161279c565b82525050565b6122498161279c565b82525050565b600061225b8284611f1b565b915081905092915050565b600060408201905081810360008301526122808185611bf6565b905061228f6020830184612222565b9392505050565b600060608201905081810360008301526122b08186611c6b565b90506122bf6020830185612231565b6122cc6040830184612231565b949350505050565b600060408201905081810360008301526122ee8185611cdf565b90506122fd6020830184612222565b9392505050565b6000606082019050818103600083015261231e8186611d54565b905061232d6020830185612231565b61233a6040830184612231565b949350505050565b6000604082019050818103600083015261235c8185611dc8565b905061236b6020830184612222565b9392505050565b6000606082019050818103600083015261238c8186611e26565b905061239b6020830185612231565b6123a86040830184612231565b949350505050565b60006020820190506123c56000830184611e8b565b92915050565b60006020820190506123e06000830184611e9a565b92915050565b600060208201905081810360008301526123ff81611fcc565b9050919050565b6000602082019050818103600083015261241f81611fef565b9050919050565b600060208201905061243b6000830184612222565b92915050565b60006060820190506124566000830186612222565b6124636020830185612222565b81810360408301526124758184611ee2565b9050949350505050565b600061248961249a565b90506124958282612891565b919050565b6000604051905090565b600067ffffffffffffffff8211156124bf576124be6128f1565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156124eb576124ea6128f1565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612517576125166128f1565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612543576125426128f1565b5b61254c82612933565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081549050919050565b600081519050919050565b600081549050919050565b600081519050919050565b600081549050919050565b600081519050919050565b6000602082019050919050565b6000600382019050919050565b6000602082019050919050565b6000600682019050919050565b6000602082019050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006127518261277c565b9050919050565b600061276382612746565b9050919050565b600061277582612746565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006127be826127c5565b9050919050565b60006127d08261277c565b9050919050565b60006127e2826127a6565b9050919050565b82818337600083830152505050565b60005b838110156128165780820151818401526020810190506127fb565b83811115612825576000848401525b50505050565b6000600282049050600182168061284357607f821691505b60208210811415612857576128566128c2565b5b50919050565b600061287061286b83612944565b61271c565b9050919050565b600061288a61288583612944565b61273c565b9050919050565b61289a82612933565b810181811067ffffffffffffffff821117156128b9576128b86128f1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061292c8254612877565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b7f43616e6e6f742062652063616c6c6564206469726563746c7900000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6129d281612746565b81146129dd57600080fd5b50565b6129e981612758565b81146129f457600080fd5b50565b612a008161276a565b8114612a0b57600080fd5b50565b612a178161279c565b8114612a2257600080fd5b5056fea2646970667358221220743d5181a0815189cf3cd6f84b4db7de70e9a0aa62777ef727830bfb8c2f8dc364736f6c63430008040033";

type FastHistoryConstructorParams =
  | [linkLibraryAddresses: FastHistoryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FastHistoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FastHistory__factory extends ContractFactory {
  constructor(...args: FastHistoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FastHistory__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FastHistoryLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$487a23fac22966c883114cdd4da3fa5461\\$__", "g"),
      linkLibraryAddresses["contracts/lib/PaginationLib.sol:PaginationLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastHistory> {
    return super.deploy(overrides || {}) as Promise<FastHistory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FastHistory {
    return super.attach(address) as FastHistory;
  }
  override connect(signer: Signer): FastHistory__factory {
    return super.connect(signer) as FastHistory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastHistoryInterface {
    return new utils.Interface(_abi) as FastHistoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastHistory {
    return new Contract(address, _abi, signerOrProvider) as FastHistory;
  }
}

export interface FastHistoryLibraryAddresses {
  ["contracts/lib/PaginationLib.sol:PaginationLib"]: string;
}
