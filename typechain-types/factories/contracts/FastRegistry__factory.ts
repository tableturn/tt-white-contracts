/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FastRegistry,
  FastRegistryInterface,
} from "../../contracts/FastRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthDrained",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "access",
    outputs: [
      {
        internalType: "contract IFastAccess",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drainEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "a",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ensureEthProvisioning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "history",
    outputs: [
      {
        internalType: "contract IFastHistory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISpc",
        name: "_spc",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "provisionWithEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastAccess",
        name: "_access",
        type: "address",
      },
    ],
    name: "setAccessAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastHistory",
        name: "_history",
        type: "address",
      },
    ],
    name: "setHistoryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISpc",
        name: "_spc",
        type: "address",
      },
    ],
    name: "setSpcAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastToken",
        name: "_token",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spc",
    outputs: [
      {
        internalType: "contract ISpc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IFastToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114c6806100206000396000f3fe6080604052600436106100ab5760003560e01c806385acb0cc1161006457806385acb0cc146102175780638b0125e21461024257806398daac831461026b578063ad5f7ab014610296578063c4d66de8146102bf578063fc0c546a146102db57610100565b80630baac66f14610150578063104dcee91461016757806326a4e8d21461019057806331736639146101b95780633eca424b146101e257806371907f17146101ec57610100565b36610100573373ffffffffffffffffffffffffffffffffffffffff167f85177f287940f2f05425a4029951af0e047a7f9c4eaa9a6e6917bcd869f86695346040516100f69190611145565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f85177f287940f2f05425a4029951af0e047a7f9c4eaa9a6e6917bcd869f86695346040516101469190611145565b60405180910390a2005b34801561015c57600080fd5b50610165610306565b005b34801561017357600080fd5b5061018e60048036038101906101899190610e25565b61048f565b005b34801561019c57600080fd5b506101b760048036038101906101b29190610edc565b6105c6565b005b3480156101c557600080fd5b506101e060048036038101906101db9190610eb3565b6106f6565b005b6101ea610826565b005b3480156101f857600080fd5b506102016108b9565b60405161020e919061103e565b60405180910390f35b34801561022357600080fd5b5061022c6108df565b604051610239919061108f565b60405180910390f35b34801561024e57600080fd5b5061026960048036038101906102649190610f05565b610905565b005b34801561027757600080fd5b50610280610a35565b60405161028d9190611059565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b89190610e8a565b610a5b565b005b6102d960048036038101906102d49190610f05565b610b8b565b005b3480156102e757600080fd5b506102f0610c59565b6040516102fd9190611074565b60405180910390f35b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016103629190611023565b60206040518083038186803b15801561037a57600080fd5b505afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190610e61565b6103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890611125565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561043c573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fd5a7a0257eadbfea7ac4432ca8fe62ac277d64736ab6ef67f11abf238a1e0f1a826040516104839190611145565b60405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610516906110e5565b60405180910390fd5b600047905080821115610530578091505b818373ffffffffffffffffffffffffffffffffffffffff16311061055457506105c2565b8273ffffffffffffffffffffffffffffffffffffffff1631826105779190611171565b91508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156105bf573d6000803e3d6000fd5b50505b5050565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016106229190611023565b60206040518083038186803b15801561063a57600080fd5b505afa15801561064e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106729190610e61565b6106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a890611125565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016107529190611023565b60206040518083038186803b15801561076a57600080fd5b505afa15801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a29190610e61565b6107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d890611125565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60003411610869576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610860906110c5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f85177f287940f2f05425a4029951af0e047a7f9c4eaa9a6e6917bcd869f86695346040516108af9190611145565b60405180910390a2565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016109619190611023565b60206040518083038186803b15801561097957600080fd5b505afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190610e61565b6109f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e790611125565b60405180910390fd5b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b8152600401610ab79190611023565b60206040518083038186803b158015610acf57600080fd5b505afa158015610ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b079190610e61565b610b46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3d90611125565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000610b976001610c7f565b90508015610bbb576001600060016101000a81548160ff0219169083151502179055505b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610c555760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610c4c91906110aa565b60405180910390a15b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060019054906101000a900460ff1615610cf65760018260ff16148015610cae5750610cac30610d6f565b155b610ced576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce490611105565b60405180910390fd5b60009050610d6a565b8160ff1660008054906101000a900460ff1660ff1610610d4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4290611105565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081359050610da1816113ef565b92915050565b600081519050610db681611406565b92915050565b600081359050610dcb8161141d565b92915050565b600081359050610de081611434565b92915050565b600081359050610df58161144b565b92915050565b600081359050610e0a81611462565b92915050565b600081359050610e1f81611479565b92915050565b60008060408385031215610e3857600080fd5b6000610e4685828601610d92565b9250506020610e5785828601610e10565b9150509250929050565b600060208284031215610e7357600080fd5b6000610e8184828501610da7565b91505092915050565b600060208284031215610e9c57600080fd5b6000610eaa84828501610dbc565b91505092915050565b600060208284031215610ec557600080fd5b6000610ed384828501610dd1565b91505092915050565b600060208284031215610eee57600080fd5b6000610efc84828501610de6565b91505092915050565b600060208284031215610f1757600080fd5b6000610f2584828501610dfb565b91505092915050565b610f37816111a5565b82525050565b610f4681611254565b82525050565b610f5581611278565b82525050565b610f648161129c565b82525050565b610f73816112c0565b82525050565b610f82816112e4565b82525050565b6000610f95601483611160565b9150610fa082611325565b602082019050919050565b6000610fb8601983611160565b9150610fc38261134e565b602082019050919050565b6000610fdb602e83611160565b9150610fe682611377565b604082019050919050565b6000610ffe601683611160565b9150611009826113c6565b602082019050919050565b61101d8161123d565b82525050565b60006020820190506110386000830184610f2e565b92915050565b60006020820190506110536000830184610f3d565b92915050565b600060208201905061106e6000830184610f4c565b92915050565b60006020820190506110896000830184610f5b565b92915050565b60006020820190506110a46000830184610f6a565b92915050565b60006020820190506110bf6000830184610f79565b92915050565b600060208201905081810360008301526110de81610f88565b9050919050565b600060208201905081810360008301526110fe81610fab565b9050919050565b6000602082019050818103600083015261111e81610fce565b9050919050565b6000602082019050818103600083015261113e81610ff1565b9050919050565b600060208201905061115a6000830184611014565b92915050565b600082825260208201905092915050565b600061117c8261123d565b91506111878361123d565b92508282101561119a576111996112f6565b5b828203905092915050565b60006111b08261121d565b9050919050565b60006111c28261121d565b9050919050565b60008115159050919050565b60006111e0826111a5565b9050919050565b60006111f2826111a5565b9050919050565b6000611204826111a5565b9050919050565b6000611216826111a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061125f82611266565b9050919050565b60006112718261121d565b9050919050565b60006112838261128a565b9050919050565b60006112958261121d565b9050919050565b60006112a7826112ae565b9050919050565b60006112b98261121d565b9050919050565b60006112cb826112d2565b9050919050565b60006112dd8261121d565b9050919050565b60006112ef82611247565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4d697373696e6720617474616368656420455448000000000000000000000000600082015250565b7f43616e6e6f742062652063616c6c6564206469726563746c7900000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4d697373696e6720535043206d656d6265727368697000000000000000000000600082015250565b6113f8816111b7565b811461140357600080fd5b50565b61140f816111c9565b811461141a57600080fd5b50565b611426816111d5565b811461143157600080fd5b50565b61143d816111e7565b811461144857600080fd5b50565b611454816111f9565b811461145f57600080fd5b50565b61146b8161120b565b811461147657600080fd5b50565b6114828161123d565b811461148d57600080fd5b5056fea2646970667358221220d9cfcf5e7a5fe43c3cfbb82288bb96da485421a441e8e42477d8f07728f8e40964736f6c63430008040033";

type FastRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FastRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FastRegistry__factory extends ContractFactory {
  constructor(...args: FastRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastRegistry> {
    return super.deploy(overrides || {}) as Promise<FastRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FastRegistry {
    return super.attach(address) as FastRegistry;
  }
  override connect(signer: Signer): FastRegistry__factory {
    return super.connect(signer) as FastRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastRegistryInterface {
    return new utils.Interface(_abi) as FastRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastRegistry {
    return new Contract(address, _abi, signerOrProvider) as FastRegistry;
  }
}
