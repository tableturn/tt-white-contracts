/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FastRegistry,
  FastRegistryInterface,
} from "../../contracts/FastRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "access",
        type: "address",
      },
    ],
    name: "AccessAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthDrained",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "history",
        type: "address",
      },
    ],
    name: "HistoryAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenAddressSet",
    type: "event",
  },
  {
    inputs: [],
    name: "access",
    outputs: [
      {
        internalType: "contract IFastAccess",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drainEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "history",
    outputs: [
      {
        internalType: "contract IFastHistory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISpc",
        name: "_spc",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payUpTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "provisionWithEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastAccess",
        name: "_access",
        type: "address",
      },
    ],
    name: "setAccessAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastHistory",
        name: "_history",
        type: "address",
      },
    ],
    name: "setHistoryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastToken",
        name: "_token",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spc",
    outputs: [
      {
        internalType: "contract ISpc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IFastToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061129f806100206000396000f3fe60806040526004361061009c5760003560e01c806385acb0cc1161006457806385acb0cc1461013f5780638a80e9551461016a57806398daac8314610193578063ad5f7ab0146101be578063c4d66de8146101e7578063fc0c546a146102035761009c565b80630baac66f146100a157806326a4e8d2146100b857806331736639146100e15780633eca424b1461010a57806371907f1714610114575b600080fd5b3480156100ad57600080fd5b506100b661022e565b005b3480156100c457600080fd5b506100df60048036038101906100da9190610cde565b6103b7565b005b3480156100ed57600080fd5b5061010860048036038101906101039190610cb5565b6104e7565b005b610112610617565b005b34801561012057600080fd5b50610129610667565b6040516101369190610e8d565b60405180910390f35b34801561014b57600080fd5b5061015461068d565b6040516101619190610ede565b60405180910390f35b34801561017657600080fd5b50610191600480360381019061018c9190610c27565b6106b3565b005b34801561019f57600080fd5b506101a8610822565b6040516101b59190610ea8565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190610c8c565b610848565b005b61020160048036038101906101fc9190610d07565b610978565b005b34801561020f57600080fd5b50610218610a46565b6040516102259190610ec3565b60405180910390f35b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b815260040161028a9190610e49565b60206040518083038186803b1580156102a257600080fd5b505afa1580156102b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102da9190610c63565b610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031090610f54565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610364573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fd5a7a0257eadbfea7ac4432ca8fe62ac277d64736ab6ef67f11abf238a1e0f1a826040516103ab9190610f74565b60405180910390a25050565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016104139190610e49565b60206040518083038186803b15801561042b57600080fd5b505afa15801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190610c63565b6104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049990610f54565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016105439190610e49565b60206040518083038186803b15801561055b57600080fd5b505afa15801561056f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105939190610c63565b6105d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c990610f54565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b3373ffffffffffffffffffffffffffffffffffffffff167f85177f287940f2f05425a4029951af0e047a7f9c4eaa9a6e6917bcd869f866953460405161065d9190610f74565b60405180910390a2565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a90610f14565b60405180910390fd5b73__$de0b566f7cdfffb42630a8590c2fdc9103$__63d0485ef783836040518363ffffffff1660e01b815260040161077c929190610e64565b60206040518083038186803b15801561079457600080fd5b505af41580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190610d30565b90506000811461081e578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561081c573d6000803e3d6000fd5b505b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016108a49190610e49565b60206040518083038186803b1580156108bc57600080fd5b505afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190610c63565b610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90610f54565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006109846001610a6c565b905080156109a8576001600060016101000a81548160ff0219169083151502179055505b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610a425760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610a399190610ef9565b60405180910390a15b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060019054906101000a900460ff1615610ae35760018260ff16148015610a9b5750610a9930610b5c565b155b610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad190610f34565b60405180910390fd5b60009050610b57565b8160ff1660008054906101000a900460ff1660ff1610610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90610f34565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081359050610b8e816111c8565b92915050565b600081519050610ba3816111df565b92915050565b600081359050610bb8816111f6565b92915050565b600081359050610bcd8161120d565b92915050565b600081359050610be281611224565b92915050565b600081359050610bf78161123b565b92915050565b600081359050610c0c81611252565b92915050565b600081519050610c2181611252565b92915050565b60008060408385031215610c3a57600080fd5b6000610c4885828601610b7f565b9250506020610c5985828601610bfd565b9150509250929050565b600060208284031215610c7557600080fd5b6000610c8384828501610b94565b91505092915050565b600060208284031215610c9e57600080fd5b6000610cac84828501610ba9565b91505092915050565b600060208284031215610cc757600080fd5b6000610cd584828501610bbe565b91505092915050565b600060208284031215610cf057600080fd5b6000610cfe84828501610bd3565b91505092915050565b600060208284031215610d1957600080fd5b6000610d2784828501610be8565b91505092915050565b600060208284031215610d4257600080fd5b6000610d5084828501610c12565b91505092915050565b610d628161104f565b82525050565b610d7181610fa0565b82525050565b610d8081611061565b82525050565b610d8f81611085565b82525050565b610d9e816110a9565b82525050565b610dad816110cd565b82525050565b610dbc816110f1565b82525050565b6000610dcf601983610f8f565b9150610dda82611127565b602082019050919050565b6000610df2602e83610f8f565b9150610dfd82611150565b604082019050919050565b6000610e15601683610f8f565b9150610e208261119f565b602082019050919050565b610e3481611038565b82525050565b610e4381611038565b82525050565b6000602082019050610e5e6000830184610d68565b92915050565b6000604082019050610e796000830185610d59565b610e866020830184610e3a565b9392505050565b6000602082019050610ea26000830184610d77565b92915050565b6000602082019050610ebd6000830184610d86565b92915050565b6000602082019050610ed86000830184610d95565b92915050565b6000602082019050610ef36000830184610da4565b92915050565b6000602082019050610f0e6000830184610db3565b92915050565b60006020820190508181036000830152610f2d81610dc2565b9050919050565b60006020820190508181036000830152610f4d81610de5565b9050919050565b60006020820190508181036000830152610f6d81610e08565b9050919050565b6000602082019050610f896000830184610e2b565b92915050565b600082825260208201905092915050565b6000610fab82611018565b9050919050565b6000610fbd82611018565b9050919050565b60008115159050919050565b6000610fdb82610fa0565b9050919050565b6000610fed82610fa0565b9050919050565b6000610fff82610fa0565b9050919050565b600061101182610fa0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061105a82611103565b9050919050565b600061106c82611073565b9050919050565b600061107e82611018565b9050919050565b600061109082611097565b9050919050565b60006110a282611018565b9050919050565b60006110b4826110bb565b9050919050565b60006110c682611018565b9050919050565b60006110d8826110df565b9050919050565b60006110ea82611018565b9050919050565b60006110fc82611042565b9050919050565b600061110e82611115565b9050919050565b600061112082611018565b9050919050565b7f43616e6e6f742062652063616c6c6564206469726563746c7900000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4d697373696e6720535043206d656d6265727368697000000000000000000000600082015250565b6111d181610fb2565b81146111dc57600080fd5b50565b6111e881610fc4565b81146111f357600080fd5b50565b6111ff81610fd0565b811461120a57600080fd5b50565b61121681610fe2565b811461122157600080fd5b50565b61122d81610ff4565b811461123857600080fd5b50565b61124481611006565b811461124f57600080fd5b50565b61125b81611038565b811461126657600080fd5b5056fea26469706673582212203c7398c3ff3d2c8735e77e4c12ee87b92c82a8ba8c062b6f1c15ece721bc0d9664736f6c63430008040033";

type FastRegistryConstructorParams =
  | [linkLibraryAddresses: FastRegistryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FastRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FastRegistry__factory extends ContractFactory {
  constructor(...args: FastRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FastRegistry__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FastRegistryLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$de0b566f7cdfffb42630a8590c2fdc9103\\$__", "g"),
      linkLibraryAddresses["contracts/lib/HelpersLib.sol:HelpersLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastRegistry> {
    return super.deploy(overrides || {}) as Promise<FastRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FastRegistry {
    return super.attach(address) as FastRegistry;
  }
  override connect(signer: Signer): FastRegistry__factory {
    return super.connect(signer) as FastRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastRegistryInterface {
    return new utils.Interface(_abi) as FastRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastRegistry {
    return new Contract(address, _abi, signerOrProvider) as FastRegistry;
  }
}

export interface FastRegistryLibraryAddresses {
  ["contracts/lib/HelpersLib.sol:HelpersLib"]: string;
}
