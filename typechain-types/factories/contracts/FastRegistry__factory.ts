/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FastRegistry,
  FastRegistryInterface,
} from "../../contracts/FastRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "access",
        type: "address",
      },
    ],
    name: "AccessAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthDrained",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "history",
        type: "address",
      },
    ],
    name: "HistoryAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenAddressSet",
    type: "event",
  },
  {
    inputs: [],
    name: "access",
    outputs: [
      {
        internalType: "contract IFastAccess",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drainEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "history",
    outputs: [
      {
        internalType: "contract IFastHistory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISpc",
        name: "_spc",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payUpTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "provisionWithEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastAccess",
        name: "_access",
        type: "address",
      },
    ],
    name: "setAccessAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastHistory",
        name: "_history",
        type: "address",
      },
    ],
    name: "setHistoryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFastToken",
        name: "_token",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spc",
    outputs: [
      {
        internalType: "contract ISpc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IFastToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e2a806100206000396000f3fe60806040526004361061009c5760003560e01c806385acb0cc1161006457806385acb0cc1461013f5780638a80e9551461016a57806398daac8314610193578063ad5f7ab0146101be578063c4d66de8146101e7578063fc0c546a146102035761009c565b80630baac66f146100a157806326a4e8d2146100b857806331736639146100e15780633eca424b1461010a57806371907f1714610114575b600080fd5b3480156100ad57600080fd5b506100b661022e565b005b3480156100c457600080fd5b506100df60048036038101906100da91906117fd565b6105f3565b005b3480156100ed57600080fd5b50610108600480360381019061010391906117d4565b6108af565b005b610112610b6b565b005b34801561012057600080fd5b50610129610d32565b60405161013691906119cf565b60405180910390f35b34801561014b57600080fd5b50610154610d58565b6040516101619190611a20565b60405180910390f35b34801561017657600080fd5b50610191600480360381019061018c9190611746565b610d7e565b005b34801561019f57600080fd5b506101a861112e565b6040516101b591906119ea565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e091906117ab565b611154565b005b61020160048036038101906101fc9190611826565b611410565b005b34801561020f57600080fd5b50610218611562565b6040516102259190611a05565b60405180910390f35b3361025b7f11403c19ecd244031340a7728397003d1198c600294432798979404cdadfb4cf60001b611588565b6102877f76d08abdbac0cdf63a6ffc2e8adb52ae2fdb4f3c645979a8d9e5352aa9974ca860001b611588565b6102b37f38e5113ba3d24152f8551deb7ffc910dd216e988a5773b8d8703b41ee451ebae60001b611588565b6102df7fdc6488d02ef1a658bd4cbd0b1b29697479907c3bd233f0f9005099f5021cfefe60001b611588565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b815260040161033a919061198b565b60206040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a9190611782565b6103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c090611ab6565b60405180910390fd5b6103f57f7442e29aee96f3989161a75135fb1eea858b5a92a4cb85af25cfb2e155fa061960001b611588565b6104217f8978e37558b4a08a1cab777897bac263d51b8ed7b0c72b66de794e9160b5d92760001b611588565b61044d7f542f2ed9e06b9fb38fc7d6fdaae9ca53bcd323e736b65a45e5b4731292c3693460001b611588565b6104797f2fc57029d18ecace0b2b300cb6387c25ecbe6514bf86c6c7ea0e705d8884b36b60001b611588565b6104a57f019593f1e422155b78f5d565fb02961551e0f9db5192e5202975ff45b0c290b360001b611588565b60004790506104d67f41f77d296e8f9ac0a7602a616754f5fa371041cbb42a3d1aac04841dd1b4625360001b611588565b6105027f7bfd843ed115d406c8289d1b5715b2be524289f47a555c46648f1d042e3899a160001b611588565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610548573d6000803e3d6000fd5b506105757f83a5572feefae223d016dc8f16639586dcd17bd6e51f65f88ec9e557d0a5e7d860001b611588565b6105a17f8ec3bbebdf45b322cd0cd200a87136822e1500837cac9ca2d7d281547be297d460001b611588565b3373ffffffffffffffffffffffffffffffffffffffff167fd5a7a0257eadbfea7ac4432ca8fe62ac277d64736ab6ef67f11abf238a1e0f1a826040516105e79190611ad6565b60405180910390a25050565b336106207f11403c19ecd244031340a7728397003d1198c600294432798979404cdadfb4cf60001b611588565b61064c7f76d08abdbac0cdf63a6ffc2e8adb52ae2fdb4f3c645979a8d9e5352aa9974ca860001b611588565b6106787f38e5113ba3d24152f8551deb7ffc910dd216e988a5773b8d8703b41ee451ebae60001b611588565b6106a47fdc6488d02ef1a658bd4cbd0b1b29697479907c3bd233f0f9005099f5021cfefe60001b611588565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016106ff919061198b565b60206040518083038186803b15801561071757600080fd5b505afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190611782565b61078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611ab6565b60405180910390fd5b6107ba7f7442e29aee96f3989161a75135fb1eea858b5a92a4cb85af25cfb2e155fa061960001b611588565b6107e67f8978e37558b4a08a1cab777897bac263d51b8ed7b0c72b66de794e9160b5d92760001b611588565b6108127ff31096cccd6acc5292e1abd5f6e62861fd5c2d2076c6bf42ae742f51a7518dc360001b611588565b61083e7fbc2fb672119db4a4b70de4e1cc5689bdf0433ba35a9301848563eb3866cbd3f460001b611588565b61086a7fc84e1a2c2931f78674849fb0aa93a153719851ac3cf4ee414d1f8fe14e2409d560001b611588565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b336108dc7f11403c19ecd244031340a7728397003d1198c600294432798979404cdadfb4cf60001b611588565b6109087f76d08abdbac0cdf63a6ffc2e8adb52ae2fdb4f3c645979a8d9e5352aa9974ca860001b611588565b6109347f38e5113ba3d24152f8551deb7ffc910dd216e988a5773b8d8703b41ee451ebae60001b611588565b6109607fdc6488d02ef1a658bd4cbd0b1b29697479907c3bd233f0f9005099f5021cfefe60001b611588565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b81526004016109bb919061198b565b60206040518083038186803b1580156109d357600080fd5b505afa1580156109e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0b9190611782565b610a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4190611ab6565b60405180910390fd5b610a767f7442e29aee96f3989161a75135fb1eea858b5a92a4cb85af25cfb2e155fa061960001b611588565b610aa27f8978e37558b4a08a1cab777897bac263d51b8ed7b0c72b66de794e9160b5d92760001b611588565b610ace7fc080440ca47d95f4aa25f69225a2cf74887f580e6420311943e7d3203840376d60001b611588565b610afa7f218f718d7fd2c07041db6eb0f07fb1fc2b1848576f727e4544f8887e1e01af6860001b611588565b610b267f7b17e3d752e692362000e5817870fc946c60bb1d31710a26b02c109a728b272660001b611588565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610b977f89ec7942e406efa832ab85786a2264981d1f9dc9e44f3cd58f5508ada2c2eb6960001b611588565b610bc37f812cf56478ab53f66be5e56e9fd8d361ea8666c5d1183338a2e51e9e0f804d6d60001b611588565b610bef7fc10980c757c040cd837c58dbc7bd4837d63d30e4bdb9f90317191022f93430de60001b611588565b610c1b7f6486a6dd2fd421b6f4e10ea04fe01cfeffecc245a057201b5f0a2b73f92f15af60001b611588565b60003411610c5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5590611a56565b60405180910390fd5b610c8a7fa8622e843363c0969e3c94d18fdaac6c184cba56d3f098bf67fa8cdc8668ec0d60001b611588565b610cb67fa06014b202423b773b7aa11c242f1edd8e69db56d45f0f60d4dba70057f5684360001b611588565b610ce27f9980a90bb09f6dd3ae4a21ca1ef238da8c7c09c28ce0eecac7dbfbb2432732f260001b611588565b3373ffffffffffffffffffffffffffffffffffffffff167f85177f287940f2f05425a4029951af0e047a7f9c4eaa9a6e6917bcd869f8669534604051610d289190611ad6565b60405180910390a2565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610daa7f5d1d0c93a0769c97fe5d28a64be91f08c66ec5a043f5cd06ec68bc3163942ed260001b611588565b610dd67f9fbfcfe80293e634033a93bc41041c8c88ff08052bde8a781e6eb51aae1563b360001b611588565b610e027fb76224e90cb509bcb502b883739430b7f6fe75474a9e61e357c7acf1cd7fee2b60001b611588565b610e2e7fdd928608051ec87939cdafd60733657a58e5bc798dca261a0ab2af3f1db88cb860001b611588565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ebe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb590611a76565b60405180910390fd5b610eea7fd8a1f692f3b03b115f087797622d74cae4df428e2414e20568573a4e4cd568eb60001b611588565b610f167f9965dfa2b945469f02aaa17dca879e03c2b61de22ea8224b343ff5249f485b2460001b611588565b610f427f049f640dbf01253a9283972dcb18ca22fddf373070699967725a43057bd5594160001b611588565b73__$de0b566f7cdfffb42630a8590c2fdc9103$__63d0485ef783836040518363ffffffff1660e01b8152600401610f7b9291906119a6565b60206040518083038186803b158015610f9357600080fd5b505af4158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb919061184f565b9050610ff97fe5e8edac3f8cf44aa4af1394b47aa19dff03f07900229a3f56e31311026a35c460001b611588565b6110257fbfb7337728d6f0ebf1bd2100b07669ceebb947f27440143728c97ed1839a0b2260001b611588565b600081146110fd576110597f83e1ec0ceed3307f230c61acec078302356249478cee4e4ed7bd8a45757d1f2460001b611588565b6110857f1c901687454f7d2228400844a96b675181eb122c0c2c98bdc539ac99c0fdd61960001b611588565b6110b17f999f7953c475f73796e14496d48b06a5384af3f47b3ef4083772308e4298f77060001b611588565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156110f7573d6000803e3d6000fd5b5061112a565b6111297fb3fa857340ebd61be7be7cd1a21c4fe7d850cb14523933c7a14437dcaa631c6160001b611588565b5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b336111817f11403c19ecd244031340a7728397003d1198c600294432798979404cdadfb4cf60001b611588565b6111ad7f76d08abdbac0cdf63a6ffc2e8adb52ae2fdb4f3c645979a8d9e5352aa9974ca860001b611588565b6111d97f38e5113ba3d24152f8551deb7ffc910dd216e988a5773b8d8703b41ee451ebae60001b611588565b6112057fdc6488d02ef1a658bd4cbd0b1b29697479907c3bd233f0f9005099f5021cfefe60001b611588565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a230c524826040518263ffffffff1660e01b8152600401611260919061198b565b60206040518083038186803b15801561127857600080fd5b505afa15801561128c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b09190611782565b6112ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e690611ab6565b60405180910390fd5b61131b7f7442e29aee96f3989161a75135fb1eea858b5a92a4cb85af25cfb2e155fa061960001b611588565b6113477f8978e37558b4a08a1cab777897bac263d51b8ed7b0c72b66de794e9160b5d92760001b611588565b6113737f9870d2fb3320fba04ed9535040a048932673f08cfbead8f9b866277eeea58d2060001b611588565b61139f7f1ef8cdef36c63b486cba66af0d1cf851791e978051893d1dd13a6646d3ca204f60001b611588565b6113cb7f7e17ab3b48383e89462e016edfb9e0280d8600a9002d599b9b5ade6d5a3a975c60001b611588565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600061141c600161158b565b90508015611440576001600060016101000a81548160ff0219169083151502179055505b61146c7f9fb75f37d610c786aec861b2437373c5fbed03a4ff2584c3403cd95ce74aab6160001b611588565b6114987fb85663eb4b9138cdd48db4206c34c24497cb65fadad173d2ffd3286f62dddb5f60001b611588565b6114c47f1825dafd285b433dd7b6b61972464f5dc5ad042b87792d7874791fcd4550cf8160001b611588565b81600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561155e5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516115559190611a3b565b60405180910390a15b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b60008060019054906101000a900460ff16156116025760018260ff161480156115ba57506115b83061167b565b155b6115f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f090611a96565b60405180910390fd5b60009050611676565b8160ff1660008054906101000a900460ff1660ff1610611657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164e90611a96565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000813590506116ad81611d53565b92915050565b6000815190506116c281611d6a565b92915050565b6000813590506116d781611d81565b92915050565b6000813590506116ec81611d98565b92915050565b60008135905061170181611daf565b92915050565b60008135905061171681611dc6565b92915050565b60008135905061172b81611ddd565b92915050565b60008151905061174081611ddd565b92915050565b6000806040838503121561175957600080fd5b60006117678582860161169e565b92505060206117788582860161171c565b9150509250929050565b60006020828403121561179457600080fd5b60006117a2848285016116b3565b91505092915050565b6000602082840312156117bd57600080fd5b60006117cb848285016116c8565b91505092915050565b6000602082840312156117e657600080fd5b60006117f4848285016116dd565b91505092915050565b60006020828403121561180f57600080fd5b600061181d848285016116f2565b91505092915050565b60006020828403121561183857600080fd5b600061184684828501611707565b91505092915050565b60006020828403121561186157600080fd5b600061186f84828501611731565b91505092915050565b61188181611bb1565b82525050565b61189081611b02565b82525050565b61189f81611bc3565b82525050565b6118ae81611be7565b82525050565b6118bd81611c0b565b82525050565b6118cc81611c2f565b82525050565b6118db81611c53565b82525050565b60006118ee601483611af1565b91506118f982611c89565b602082019050919050565b6000611911601983611af1565b915061191c82611cb2565b602082019050919050565b6000611934602e83611af1565b915061193f82611cdb565b604082019050919050565b6000611957601683611af1565b915061196282611d2a565b602082019050919050565b61197681611b9a565b82525050565b61198581611b9a565b82525050565b60006020820190506119a06000830184611887565b92915050565b60006040820190506119bb6000830185611878565b6119c8602083018461197c565b9392505050565b60006020820190506119e46000830184611896565b92915050565b60006020820190506119ff60008301846118a5565b92915050565b6000602082019050611a1a60008301846118b4565b92915050565b6000602082019050611a3560008301846118c3565b92915050565b6000602082019050611a5060008301846118d2565b92915050565b60006020820190508181036000830152611a6f816118e1565b9050919050565b60006020820190508181036000830152611a8f81611904565b9050919050565b60006020820190508181036000830152611aaf81611927565b9050919050565b60006020820190508181036000830152611acf8161194a565b9050919050565b6000602082019050611aeb600083018461196d565b92915050565b600082825260208201905092915050565b6000611b0d82611b7a565b9050919050565b6000611b1f82611b7a565b9050919050565b60008115159050919050565b6000611b3d82611b02565b9050919050565b6000611b4f82611b02565b9050919050565b6000611b6182611b02565b9050919050565b6000611b7382611b02565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611bbc82611c65565b9050919050565b6000611bce82611bd5565b9050919050565b6000611be082611b7a565b9050919050565b6000611bf282611bf9565b9050919050565b6000611c0482611b7a565b9050919050565b6000611c1682611c1d565b9050919050565b6000611c2882611b7a565b9050919050565b6000611c3a82611c41565b9050919050565b6000611c4c82611b7a565b9050919050565b6000611c5e82611ba4565b9050919050565b6000611c7082611c77565b9050919050565b6000611c8282611b7a565b9050919050565b7f4d697373696e6720617474616368656420455448000000000000000000000000600082015250565b7f43616e6e6f742062652063616c6c6564206469726563746c7900000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4d697373696e6720535043206d656d6265727368697000000000000000000000600082015250565b611d5c81611b14565b8114611d6757600080fd5b50565b611d7381611b26565b8114611d7e57600080fd5b50565b611d8a81611b32565b8114611d9557600080fd5b50565b611da181611b44565b8114611dac57600080fd5b50565b611db881611b56565b8114611dc357600080fd5b50565b611dcf81611b68565b8114611dda57600080fd5b50565b611de681611b9a565b8114611df157600080fd5b5056fea2646970667358221220a4f577df10e0dfebc0d4662b3ae3c2ba298dd1a941ff2921abb0a2652733f55664736f6c63430008040033";

type FastRegistryConstructorParams =
  | [linkLibraryAddresses: FastRegistryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FastRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FastRegistry__factory extends ContractFactory {
  constructor(...args: FastRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FastRegistry__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FastRegistryLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$de0b566f7cdfffb42630a8590c2fdc9103\\$__", "g"),
      linkLibraryAddresses["contracts/lib/HelpersLib.sol:HelpersLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastRegistry> {
    return super.deploy(overrides || {}) as Promise<FastRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FastRegistry {
    return super.attach(address) as FastRegistry;
  }
  override connect(signer: Signer): FastRegistry__factory {
    return super.connect(signer) as FastRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastRegistryInterface {
    return new utils.Interface(_abi) as FastRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastRegistry {
    return new Contract(address, _abi, signerOrProvider) as FastRegistry;
  }
}

export interface FastRegistryLibraryAddresses {
  ["contracts/lib/HelpersLib.sol:HelpersLib"]: string;
}
