/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Spc, SpcInterface } from "../../contracts/Spc";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthDrained",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract FastRegistry",
        name: "registry",
        type: "address",
      },
    ],
    name: "FastRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "member",
        type: "address",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drainEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fastTokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "memberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perPage",
        type: "uint256",
      },
    ],
    name: "paginateFastTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "perPage",
        type: "uint256",
      },
    ],
    name: "paginateMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provisionWithEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FastRegistry",
        name: "registry",
        type: "address",
      },
    ],
    name: "registerFastRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a38806100206000396000f3fe60806040526004361061009c5760003560e01c806391197a5c1161006457806391197a5c1461013f57806396d0d8811461017d578063a230c524146101a8578063c4d66de8146101e5578063c6549ba41461020e578063ca6d56dc1461024c5761009c565b80630b1ca49a146100a15780630baac66f146100ca57806311aee380146100e15780633756bd281461010c5780633eca424b14610135575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190611260565b610275565b005b3480156100d657600080fd5b506100df61039c565b005b3480156100ed57600080fd5b506100f6610506565b6040516101039190611687565b60405180910390f35b34801561011857600080fd5b50610133600480360381019061012e919061132f565b610515565b005b61013d61069e565b005b34801561014b57600080fd5b5061016660048036038101906101619190611358565b610731565b604051610174929190611521565b60405180910390f35b34801561018957600080fd5b506101926107d1565b60405161019f9190611687565b60405180910390f35b3480156101b457600080fd5b506101cf60048036038101906101ca9190611260565b6107de565b6040516101dc9190611588565b60405180910390f35b3480156101f157600080fd5b5061020c60048036038101906102079190611260565b610873565b005b34801561021a57600080fd5b5061023560048036038101906102309190611358565b610914565b604051610243929190611521565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e9190611289565b6109b6565b005b33600173__$e466c31e3961a8766d3d15b47ab000296d$__6308b40aef9091836040518363ffffffff1660e01b81526004016102b292919061165e565b60206040518083038186803b1580156102ca57600080fd5b505af41580156102de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103029190611306565b610341576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103389061161e565b60405180910390fd5b610355826001610aef90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de68449260405160405180910390a25050565b33600173__$e466c31e3961a8766d3d15b47ab000296d$__6308b40aef9091836040518363ffffffff1660e01b81526004016103d992919061165e565b60206040518083038186803b1580156103f157600080fd5b505af4158015610405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104299190611306565b610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f9061161e565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104b3573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fd5a7a0257eadbfea7ac4432ca8fe62ac277d64736ab6ef67f11abf238a1e0f1a826040516104fa9190611687565b60405180910390a25050565b60006001800180549050905090565b33600173__$e466c31e3961a8766d3d15b47ab000296d$__6308b40aef9091836040518363ffffffff1660e01b815260040161055292919061165e565b60206040518083038186803b15801561056a57600080fd5b505af415801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190611306565b6105e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d89061161e565b60405180910390fd5b6003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106578268056bc75e2d63100000610d87565b8173ffffffffffffffffffffffffffffffffffffffff167fa393070be795669766b8f40ecaab0724def57650be5914b232c8fb18ca507f3660405160405180910390a25050565b600034116106e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d8906115be565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f85177f287940f2f05425a4029951af0e047a7f9c4eaa9a6e6917bcd869f86695346040516107279190611687565b60405180910390a2565b6060600073__$487a23fac22966c883114cdd4da3fa5461$__632479d065600386866040518463ffffffff1660e01b815260040161077193929190611551565b60006040518083038186803b15801561078957600080fd5b505af415801561079d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107c691906112b2565b915091509250929050565b6000600380549050905090565b6000600173__$e466c31e3961a8766d3d15b47ab000296d$__6308b40aef9091846040518363ffffffff1660e01b815260040161081c92919061165e565b60206040518083038186803b15801561083457600080fd5b505af4158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190611306565b9050919050565b600061087f6001610e2e565b905080156108a3576001600060016101000a81548160ff0219169083151502179055505b6108b7826001610f1e90919063ffffffff16565b80156109105760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161090791906115a3565b60405180910390a15b5050565b6060600073__$487a23fac22966c883114cdd4da3fa5461$__632479d0656001800186866040518463ffffffff1660e01b815260040161095693929190611551565b60006040518083038186803b15801561096e57600080fd5b505af4158015610982573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109ab91906112b2565b915091509250929050565b33600173__$e466c31e3961a8766d3d15b47ab000296d$";

type SpcConstructorParams =
  | [linkLibraryAddresses: SpcLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Spc__factory extends ContractFactory {
  constructor(...args: SpcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Spc__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: SpcLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e466c31e3961a8766d3d15b47ab000296d\\$__", "g"),
      linkLibraryAddresses["contracts/lib/AddressSetLib.sol:AddressSetLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$487a23fac22966c883114cdd4da3fa5461\\$__", "g"),
      linkLibraryAddresses["contracts/lib/PaginationLib.sol:PaginationLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Spc> {
    return super.deploy(overrides || {}) as Promise<Spc>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Spc {
    return super.attach(address) as Spc;
  }
  override connect(signer: Signer): Spc__factory {
    return super.connect(signer) as Spc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpcInterface {
    return new utils.Interface(_abi) as SpcInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Spc {
    return new Contract(address, _abi, signerOrProvider) as Spc;
  }
}

export interface SpcLibraryAddresses {
  ["contracts/lib/AddressSetLib.sol:AddressSetLib"]: string;
  ["contracts/lib/PaginationLib.sol:PaginationLib"]: string;
}
