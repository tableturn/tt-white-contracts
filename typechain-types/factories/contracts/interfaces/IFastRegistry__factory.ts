/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFastRegistry,
  IFastRegistryInterface,
} from "../../../contracts/interfaces/IFastRegistry";

const _abi = [
  {
    inputs: [],
    name: "access",
    outputs: [
      {
        internalType: "contract IFastAccess",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "a",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ensureEthProvisioning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "history",
    outputs: [
      {
        internalType: "contract IFastHistory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spc",
    outputs: [
      {
        internalType: "contract ISpc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IFastToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFastRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IFastRegistryInterface {
    return new utils.Interface(_abi) as IFastRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFastRegistry {
    return new Contract(address, _abi, signerOrProvider) as IFastRegistry;
  }
}
