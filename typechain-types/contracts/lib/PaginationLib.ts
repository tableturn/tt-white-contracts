/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export declare namespace IFastHistory {
  export type MintingProofStruct = {
    amount: BigNumberish;
    blockNumber: BigNumberish;
    ref: string;
  };

  export type MintingProofStructOutput = [BigNumber, BigNumber, string] & {
    amount: BigNumber;
    blockNumber: BigNumber;
    ref: string;
  };

  export type TransferProofStruct = {
    from: string;
    spender: string;
    to: string;
    amount: BigNumberish;
    blockNumber: BigNumberish;
    ref: string;
  };

  export type TransferProofStructOutput = [
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    string
  ] & {
    from: string;
    spender: string;
    to: string;
    amount: BigNumber;
    blockNumber: BigNumber;
    ref: string;
  };
}

export interface PaginationLibInterface extends utils.Interface {
  functions: {
    "addresses(address[],uint256,uint256)": FunctionFragment;
    "mintingProofs((uint256,uint256,string)[],uint256,uint256)": FunctionFragment;
    "transferProofs((address,address,address,uint256,uint256,string)[],uint256,uint256)": FunctionFragment;
    "uint256s(uint256[],uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addresses"
      | "mintingProofs"
      | "transferProofs"
      | "uint256s"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addresses",
    values: [string[], BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintingProofs",
    values: [IFastHistory.MintingProofStruct[], BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferProofs",
    values: [IFastHistory.TransferProofStruct[], BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "uint256s",
    values: [BigNumberish[], BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "addresses", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mintingProofs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferProofs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "uint256s", data: BytesLike): Result;

  events: {};
}

export interface PaginationLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PaginationLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addresses(
      collection: string[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[], BigNumber]>;

    mintingProofs(
      collection: IFastHistory.MintingProofStruct[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[IFastHistory.MintingProofStructOutput[], BigNumber]>;

    transferProofs(
      collection: IFastHistory.TransferProofStruct[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[IFastHistory.TransferProofStructOutput[], BigNumber]>;

    uint256s(
      collection: BigNumberish[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[], BigNumber]>;
  };

  addresses(
    collection: string[],
    cursor: BigNumberish,
    perPage: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string[], BigNumber]>;

  mintingProofs(
    collection: IFastHistory.MintingProofStruct[],
    cursor: BigNumberish,
    perPage: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[IFastHistory.MintingProofStructOutput[], BigNumber]>;

  transferProofs(
    collection: IFastHistory.TransferProofStruct[],
    cursor: BigNumberish,
    perPage: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[IFastHistory.TransferProofStructOutput[], BigNumber]>;

  uint256s(
    collection: BigNumberish[],
    cursor: BigNumberish,
    perPage: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber[], BigNumber]>;

  callStatic: {
    addresses(
      collection: string[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[], BigNumber]>;

    mintingProofs(
      collection: IFastHistory.MintingProofStruct[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[IFastHistory.MintingProofStructOutput[], BigNumber]>;

    transferProofs(
      collection: IFastHistory.TransferProofStruct[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[IFastHistory.TransferProofStructOutput[], BigNumber]>;

    uint256s(
      collection: BigNumberish[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[], BigNumber]>;
  };

  filters: {};

  estimateGas: {
    addresses(
      collection: string[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintingProofs(
      collection: IFastHistory.MintingProofStruct[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferProofs(
      collection: IFastHistory.TransferProofStruct[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    uint256s(
      collection: BigNumberish[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addresses(
      collection: string[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintingProofs(
      collection: IFastHistory.MintingProofStruct[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferProofs(
      collection: IFastHistory.TransferProofStruct[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    uint256s(
      collection: BigNumberish[],
      cursor: BigNumberish,
      perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
